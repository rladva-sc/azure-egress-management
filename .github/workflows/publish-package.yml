name: Publish Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version'
        required: true
        default: '0.1.0'
      publish_to_pypi:
        description: 'Publish to PyPI'
        required: true
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build-and-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools twine
    
    - name: Set version from release tag
      if: github.event_name == 'release'
      run: |
        # Strip 'v' prefix from tag if present
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Set version from input
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "PACKAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
    
    - name: Update version in setup.py
      run: |
        if [ -f setup.py ]; then
          sed -i "s/version=\".*\"/version=\"$PACKAGE_VERSION\"/g" setup.py
        fi
    
    - name: Create package
      run: |
        python -m build
    
    - name: Run tests on built package
      run: |
        pip install dist/*.whl
        pytest
    
    - name: Upload package artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      if: (github.event_name == 'release') || (github.event.inputs.publish_to_pypi == 'true')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
